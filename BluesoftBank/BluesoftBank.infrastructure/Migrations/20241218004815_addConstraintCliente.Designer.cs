// <auto-generated />
using BluesoftBank.infrastructure.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BluesoftBank.infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20241218004815_addConstraintCliente")]
    partial class addConstraintCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BluesoftBank.core.entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdTipoCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_cliente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_identificacion");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoCliente");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("BluesoftBank.core.entidades.TipoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("tipo_cliente", (string)null);
                });

            modelBuilder.Entity("BluesoftBank.core.entidades.TipoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("tipo_cuenta", (string)null);
                });

            modelBuilder.Entity("BluesoftBank.core.entidades.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("tipo_movimiento", (string)null);
                });

            modelBuilder.Entity("BluesoftBank.core.entidades.Cliente", b =>
                {
                    b.HasOne("BluesoftBank.core.entidades.TipoCliente", "TipoCliente")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoCliente");
                });

            modelBuilder.Entity("BluesoftBank.core.entidades.TipoCliente", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
